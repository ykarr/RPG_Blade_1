// YunMinSeong. All right reserved. 

#pragma once

#include "NativeGameplayTags.h"

/**
 * 
 */
namespace BladeGameplayTags {
	/** Input **/
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Move);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Jump);
	
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_EquipSword);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_UnEquipSword);

	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_LightAttack_Sword);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_HeavyAttack_Sword);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Roll);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SwitchTarget);

	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_MustBeHeld);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_MustBeHeld_Block);

	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable_TargetLock);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable_Rage);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SpecialWeaponAbility_Light);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SpecialWeaponAbility_Heavy);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SpecialWeaponAbility_3);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_PickUp_Potions);


	/** Player Tags **/
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Equip_Sword);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Unequip_Sword);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Light_Sword);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Heavy_Sword);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_HitPause);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Roll);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Block);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_TargetLock);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Rage);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_SpecialWeaponAbility_Light);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_SpecialWeaponAbility_Heavy);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_SpecialWeaponAbility_3);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_PickUp_Potions);

	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_CoolDown_SpecialWeaponAbility_Light);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_CoolDown_SpecialWeaponAbility_Heavy);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_CoolDown_SpecialWeaponAbility_3);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Sword);
	/* State */
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_State_FinishAttack); 
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_State_Rolling); 
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_State_Blocking); 
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_State_TargetLock);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_State_Rage_Activating);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_State_Rage_Active);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_State_Rage_Full);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_State_Rage_None);

	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_SetByCaller_AttackType_Light);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_SetByCaller_AttackType_Heavy);
	
	/** Anim**/
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_Equip_Sword);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_Unequip_Sword);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_HitPause);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SuccessfullBlock);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SwitchTarget_Left);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SwitchTarget_Right);

	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_ActivateRage);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_AOE);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_UsePotions);

	/** Enemy Tags **/
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Weapon);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_Melee);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_Ranged);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_SummonEnemies);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_SpawnPotion);

	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_Strafing);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_UnderAttack);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_Unblockable);

	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Event_SummonEnemies);
	/** Shared Tags **/
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_HitReact);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_Death);

	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_MeleeHit);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_HitReact);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_SpawnProjectile);

	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_SetByCaller_BaseDamage);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Dead);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Front);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Left);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Right);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Back);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Invincible);
	/** Shared Tags **/
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameData_Level_SurvivalGameModeMap);
	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameData_Level_MainMenuMap);

	BLADE_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameData_SaveGame_Slot1);
}

